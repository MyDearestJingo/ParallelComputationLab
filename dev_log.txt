@Before Apr 29nd
= 已完成
- 矩阵运算中基础部分，多线程部分，矩阵行读优化部分的编写并通过调试运行，已获取运行结果

@Apr 29nd
= 问题
- 编译失败
    - 可能原因：GCC编译选项问题，未能正常启动SIMD(SSE/AVX)

@Apr 30nd
= 发现
- GCC编译选项可使用-msse（使用SSE），其他选项可见https://gcc.gnu.org/onlinedocs/gcc-4.5.3/gcc/i386-and-x86_002d64-Options.html
- CMAKE选项则可以使用SET(CMAEK_CXX_FLAGS)或SET(CMAKE_C_FLAGS)，也可直接通过ADD_COMPILE_OPTIONS命令
= 待办
- 将SIMD加速代码独立，简化程序和CMakeLists.txt文件编写，先确保可正常使用SIMD再作其他整合的操作
    - Apr 30nd 17:50 已不用此工作，先已经可以编译运行
= 草他妈的！！！！！！！
- 一定要注意vl2_matrix.cpp/matrixF32_madd()里底层循环的ap++，很重要！坑了老子一下午！
= 已完成
- 对simd_arch.h的自定义，也就是注释掉/取消注释一部分宏，以启用接口
- CMake编写并调试运行，现已可运行
= 下一阶段
- 编写matrix_madd()函数外部（在case SSE）中的外层循环，以更新传入的指针基址

@May 1st 3:00
= 已完成
- 编写matrix_madd()函数外部（在case SSE）中的外层循环，更新传入的指针基址
= 可优化点
- 在计算idx_（即idxA,idxB,idxC）时可考虑使用SSE来进行加速
- 直接使用OpenMP进行多线程会出现整合问题，计算结果有误
    - 考虑手动划分16个线程进行运算，最后整合
= 习得技能
- 如果在case中声明了变量，需要用{}将这个case的内容括住
    - 养成习惯，写case的话都要带{}
- CMake使用OpenMP
    - 1. 添加-fopenmp编译选项
    - 2. 添加FIND_PACKAGE(OpenMP REQUIRED)
    - 3. 添加TARGET_LINK_LIBRARIES(pclab_exe OPENMP::OPENMP_CXX)
= 代码缺陷：
- 提高_VF32_SIZE将会导致计算不充分，原因不明
= 待办
- 高优先级：完成AVX512的编写
- 低优先级：找到提高_VF32_SIZE且不会导致计算错误的办法
@May 1st 14:38
= 已完成
- AVX编写
    - 由于i5-8500与i7-9700均不支持AVX512，故目前暂时无法实现
= 发现
- 在使用AVX的过程中，如果在读主存时使用_mm256_load_ps((aAddr))将会出现段错误
    - 原因可能是内存不连续（但是不应该啊，申请内存的时候是连续申请的啊）
    - 验证方案：尝试改用C的malloc函数进行分配
    - 规避该问题：使用_mm256_loadu_ps((aAddr))进行代替
= 习得技能
- CMake enable AVX
    - 添加编译选项-mavx
